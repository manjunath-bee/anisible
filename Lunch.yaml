- name : Lunch Ec2 and Route 53
  hosts: local
  connection: local
  gather_facts: yes
  vars:
    zone: aws82s.online
  tasks: 
   - name: Install bottle for Python 3.3 specifically, using the 'pip3.3' executable
     ansible.builtin.pip:
       name: "{{ item }}"
       executable: pip3.9
     loop:
      - boto3
      - botocore

   - name: start an instance with a public IP address
     amazon.aws.ec2_instance:
       name: "{{ item }}"
       vpc_subnet_id: subnet-0c26e13f782edfff0
       instance_type: t2.micro
       security_group: sg-0a66b33908bd8eb94
       image_id: ami-09c813fb71547fc4f
     register: ec2_info
     loop:
       - mysql
       - backend
       - web

  #  - name: print ec2_info
  #    ansible.builtin.debug:
  #      msg: "{{ item.instances[0].private_ip_address }}"
  #    loop: "{{ ec2_info.results }}"

   - name: Add new.foo.com as an A record with 3 IPs and wait until the changes have been replicated
     amazon.aws.route53:
       state: present
       zone: "{{ zone }}"
       record: "{{item.item }}.{{ zone }}"
       type: A
       ttl: 1
       value: "{{ item.instances[0].private_ip_address }}"
       wait: true
       overwrite: true
     loop: "{{ ec2_info.results }}"
     when: item.item == "mysql"  and item.item == "backend"

   - name: Add new.foo.com as an A record with 3 IPs and wait until the changes have been replicated
     amazon.aws.route53:
       state: present
       zone: "{{ zone }}"
       record: "{{ zone }}"
       type: A
       ttl: 1
       value: "{{ item.instances[0].public_ip_address }}"
       wait: true
       overwrite: true
     loop: "{{ ec2_info.results }}"
     when: item.item == "web"


    
  